{"version":3,"sources":["../../../src/components/modal/modal.js"],"names":["KEYCODES","ESCAPE","Modal","domRef","children","className","show","closeOnBlur","showClose","onClose","closeOnEsc","props","ref","portalContainer","setPortalContainer","undefined","doc","document","container","createElement","setAttribute","body","appendChild","handleKeydown","evt","keyCode","addEventListener","removeEventListener","parentNode","removeChild","ReactDOM","createPortal","Content","ModalContent","Card","ModalCard","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAUR;AAAA,MATJC,MASI,QATJA,MASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,GAAG,GAAG,mBAAOT,MAAP,CAAZ;;AACA,kBAA8C,sBAA9C;AAAA;AAAA,MAAOU,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,wBAAU,YAAM;AACd,QAAI,CAACR,IAAL,EAAW;AACT,aAAOS,SAAP;AACD;;AACD,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,IAAkBA,QAA9B;AACA,QAAMC,SAAS,GAAGF,GAAG,CAACG,aAAJ,CAAkB,KAAlB,CAAlB;AACAD,IAAAA,SAAS,CAACE,YAAV,CAAuB,OAAvB,EAAgC,iBAAhC;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASC,WAAT,CAAqBJ,SAArB;AACAJ,IAAAA,kBAAkB,CAACI,SAAD,CAAlB;;AAEA,QAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,UAAIA,GAAG,CAACC,OAAJ,KAAgBzB,QAAQ,CAACC,MAAzB,IAAmCK,IAAvC,EAA6C;AAC3CG,QAAAA,OAAO;AACR;AACF,KAJD;;AAMA,QAAIC,UAAJ,EAAgB;AACdM,MAAAA,GAAG,CAACU,gBAAJ,CAAqB,SAArB,EAAgCH,aAAhC;AACD;;AACD,WAAO,YAAM;AACXP,MAAAA,GAAG,CAACW,mBAAJ,CAAwB,SAAxB,EAAmCJ,aAAnC;AACAL,MAAAA,SAAS,CAACU,UAAV,CAAqBC,WAArB,CAAiCX,SAAjC;AACD,KAHD;AAID,GAvBD,EAuBG,CAACZ,IAAD,CAvBH;;AAyBA,MAAI,CAACO,eAAL,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,sBAAOiB,qBAASC,YAAT,eACL,gCAAC,qBAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEtB,MAAAA,OAAO,EAAPA;AAAF;AAA9B,kBACE,gCAAC,mBAAD;AACE,IAAA,MAAM,EAAEG,GADV;AAEE,IAAA,SAAS,EAAE,4BAAW,OAAX,EAAoBP,SAApB,EAA+B;AACxC,mBAAaC;AAD2B,KAA/B;AAFb,kBAME;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,OAAO,EAAEC,WAAW,GAAGE,OAAH,GAAaM;AAHnC,IANF,EAWGX,QAXH,EAYGI,SAAS,iBACR;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAC,sBAHZ;AAIE,kBAAW;AAJb,IAbJ,CADF,CADK,EAwBLI,eAxBK,CAAP;AA0BD,CArED;;AAuEAX,KAAK,CAAC8B,OAAN,GAAgBC,mBAAhB;AACA/B,KAAK,CAACgC,IAAN,GAAaC,gBAAb;AAYAjC,KAAK,CAACkC,YAAN,GAAqB;AACnB1B,EAAAA,UAAU,EAAE,IADO;AAEnBF,EAAAA,SAAS,EAAE,IAFQ;AAGnB;AACAS,EAAAA,QAAQ,EAAEF;AAJS,CAArB;eAOeb,K","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport ModalContent from './components/content';\nimport ModalCard from './components/card';\n\nimport { ModalContext } from './context';\nimport Element from '../element';\n\nconst KEYCODES = {\n  ESCAPE: 27,\n};\n\nconst Modal = ({\n  domRef,\n  children,\n  className,\n  show,\n  closeOnBlur,\n  showClose,\n  onClose,\n  closeOnEsc,\n  ...props\n}) => {\n  const ref = useRef(domRef);\n  const [portalContainer, setPortalContainer] = useState();\n\n  useEffect(() => {\n    if (!show) {\n      return undefined;\n    }\n    const doc = props.document || document;\n    const container = doc.createElement('div');\n    container.setAttribute('class', 'modal-container');\n    doc.body.appendChild(container);\n    setPortalContainer(container);\n\n    const handleKeydown = (evt) => {\n      if (evt.keyCode === KEYCODES.ESCAPE && show) {\n        onClose();\n      }\n    };\n\n    if (closeOnEsc) {\n      doc.addEventListener('keydown', handleKeydown);\n    }\n    return () => {\n      doc.removeEventListener('keydown', handleKeydown);\n      container.parentNode.removeChild(container);\n    };\n  }, [show]);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <ModalContext.Provider value={{ onClose }}>\n      <Element\n        domRef={ref}\n        className={classnames('modal', className, {\n          'is-active': show,\n        })}\n      >\n        <div\n          role=\"presentation\"\n          className=\"modal-background\"\n          onClick={closeOnBlur ? onClose : undefined}\n        />\n        {children}\n        {showClose && (\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n          />\n        )}\n      </Element>\n    </ModalContext.Provider>,\n    portalContainer,\n  );\n};\n\nModal.Content = ModalContent;\nModal.Card = ModalCard;\n\nModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  closeOnEsc: PropTypes.bool,\n  closeOnBlur: PropTypes.bool,\n  showClose: PropTypes.bool,\n  document: PropTypes.object,\n  className: PropTypes.string,\n};\n\nModal.defaultProps = {\n  closeOnEsc: true,\n  showClose: true,\n  // Expose mount point for testing\n  document: undefined,\n};\n\nexport default Modal;\n"],"file":"modal.js"}