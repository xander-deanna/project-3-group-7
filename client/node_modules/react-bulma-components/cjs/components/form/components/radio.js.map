{"version":3,"sources":["../../../../src/components/form/components/radio.js"],"names":["Radio","className","style","disabled","checked","value","name","children","domRef","props","defaultProps","renderAs"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAUR;AAAA,MATJC,SASI,QATJA,SASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADDC,KACC;;AACJ,sBACE,gCAAC,mBAAD;AACE,IAAA,QAAQ,EAAC,OADX;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAIE,IAAA,SAAS,EAAE,4BAAW,OAAX,EAAoBF,SAApB,CAJb;AAKE,IAAA,KAAK,EAAEC;AALT,kBAOE,gCAAC,mBAAD,eACMO,KADN;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,QAAQ,EAAEF;AANZ,KAPF,EAcK,GAdL,EAeGI,QAfH,CADF;AAmBD,CA9BD;;AA8DAP,KAAK,CAACU,YAAN,GAAqB;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;eAIeX,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\n\nconst Radio = ({\n  className,\n  style,\n  disabled,\n  checked,\n  value,\n  name,\n  children,\n  domRef,\n  ...props\n}) => {\n  return (\n    <Element\n      renderAs=\"label\"\n      domRef={domRef}\n      disabled={disabled}\n      className={classnames('radio', className)}\n      style={style}\n    >\n      <Element\n        {...props}\n        name={name}\n        checked={checked}\n        type=\"radio\"\n        value={value}\n        disabled={disabled}\n      />{' '}\n      {children}\n    </Element>\n  );\n};\n\nRadio.propTypes = {\n  /**\n   * The name of the input field.\n   * Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n  /**\n   * React style object for `Form.Radio`\n   */\n  style: PropTypes.shape({}),\n  /**\n   * Whether this radio button is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Whether this radio button is checked,\n   */\n  checked: PropTypes.bool,\n  /**\n   * The associated value of this radio button.\n   * You can retrieve this value in the onChange handler of this component.\n   */\n  value: PropTypes.string,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nRadio.defaultProps = {\n  renderAs: 'input',\n};\n\nexport default Radio;\n"],"file":"radio.js"}