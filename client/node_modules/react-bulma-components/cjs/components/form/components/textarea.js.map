{"version":3,"sources":["../../../../src/components/form/components/textarea.js"],"names":["Textarea","className","size","color","status","fixedSize","props","context","calculatedSize","defaultProps","renderAs"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAA6D;AAAA;;AAAA,MAA1DC,SAA0D,QAA1DA,SAA0D;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AAC5E,MAAMC,OAAO,GAAG,0BAAhB;AACA,MAAMC,cAAc,GAAGN,IAAI,IAAIK,OAAO,CAACL,IAAvC;AACA,sBACE,gCAAC,mBAAD,eACMI,KADN;AAEE,IAAA,SAAS,EAAE,6BAAW,UAAX,EAAuBL,SAAvB,+DACF,iCAAgBG,MAAhB,CADE,GAC0BA,MAD1B,gCAET,gBAFS,EAESC,SAFT,6CAGFG,cAHE,GAGiBA,cAHjB,6CAIFL,KAJE,GAIQA,KAJR;AAFb,KADF;AAWD,CAdD;;AAqDAH,QAAQ,CAACS,YAAT,GAAwB;AACtBC,EAAAA,QAAQ,EAAE;AADY,CAAxB;eAIeV,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport useFieldContext from './field/context';\nimport { normalizeStatus } from '../../../services/normalizer';\n\nconst Textarea = ({ className, size, color, status, fixedSize, ...props }) => {\n  const context = useFieldContext();\n  const calculatedSize = size || context.size;\n  return (\n    <Element\n      {...props}\n      className={classnames('textarea', className, {\n        [`is-${normalizeStatus(status)}`]: status,\n        'has-fixed-size': fixedSize,\n        [`is-${calculatedSize}`]: calculatedSize,\n        [`is-${color}`]: color,\n      })}\n    />\n  );\n};\n\nTextarea.propTypes = {\n  /**\n   * Adjusts the size of the textarea input\n   */\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  /**\n   * The color of this input.\n   */\n  color: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  status: PropTypes.oneOf(['focus', 'hover']),\n  /**\n   * Whether the size of this textarea should be fixed regardless of its content.\n   */\n  fixedSize: PropTypes.bool,\n  disabled: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nTextarea.defaultProps = {\n  renderAs: 'textarea',\n};\n\nexport default Textarea;\n"],"file":"textarea.js"}