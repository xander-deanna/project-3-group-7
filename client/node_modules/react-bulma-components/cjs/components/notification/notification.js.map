{"version":3,"sources":["../../../src/components/notification/notification.js"],"names":["Notification","className","color","light","props"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAA2C;AAAA;;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAC9D,sBACE,gCAAC,mBAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAE,6BACT,cADS,+DAGAF,KAHA,GAGUA,KAHV,gCAIP,UAJO,EAIKC,KAJL,iBAMTF,SANS;AAFb,KADF;AAaD,CAdD;;eAiCeD,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../element';\n\nconst Notification = ({ className, color, light, ...props }) => {\n  return (\n    <Element\n      {...props}\n      className={classnames(\n        'notification',\n        {\n          [`is-${color}`]: color,\n          'is-light': light,\n        },\n        className,\n      )}\n    />\n  );\n};\n\nNotification.propTypes = {\n  color: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  light: PropTypes.bool,\n};\n\nexport default Notification;\n"],"file":"notification.js"}