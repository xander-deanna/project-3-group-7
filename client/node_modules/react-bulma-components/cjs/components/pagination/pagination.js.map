{"version":3,"sources":["../../../src/components/pagination/pagination.js"],"names":["getFirstPage","current","last","delta","minPage","page","Math","min","getLastPage","total","maxPage","max","Pagination","disabled","next","previous","showPrevNext","showFirstLast","autoHide","className","size","align","rounded","onChange","props","lastPage","firstPage","prevDisabled","nextDisabled","undefined","Array","fill","map","_","i","defaultProps","renderAs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { normalizeAlign } from '../../services/normalizer';\n\nimport Element from '../element';\n\nconst getFirstPage = (current, last, delta) => {\n  if (current === 1) {\n    return 1;\n  }\n\n  const minPage = last - delta * 2;\n  const page = Math.min(current - delta, minPage);\n\n  return page <= 0 ? 1 : page;\n};\n\nconst getLastPage = (current, total, delta) => {\n  if (current === total) {\n    return total;\n  }\n\n  const maxPage = delta * 2 + 1;\n  const page = Math.max(current + delta, maxPage);\n  return page > total ? total : page;\n};\n\nconst Pagination = ({\n  current,\n  disabled,\n  total,\n  next,\n  previous,\n  showPrevNext,\n  showFirstLast,\n  delta,\n  autoHide,\n  className,\n  size,\n  align,\n  rounded,\n  onChange,\n  ...props\n}) => {\n  if ((total <= 1 && autoHide) || current > total) {\n    return null;\n  }\n\n  const lastPage = getLastPage(current, total, delta);\n  const firstPage = getFirstPage(current, lastPage, delta);\n  const prevDisabled = current === 1 || disabled;\n  const nextDisabled = current === total || disabled;\n\n  return (\n    <Element\n      {...props}\n      className={classnames('pagination', className, {\n        [`is-${size}`]: size,\n        [`is-${normalizeAlign(align)}`]: align,\n        'is-rounded': rounded,\n      })}\n      aria-label=\"pagination\"\n    >\n      {showPrevNext && (\n        <>\n          <a\n            role=\"button\"\n            tabIndex={0}\n            onClick={\n              prevDisabled\n                ? undefined\n                : () => {\n                    return onChange(current - 1);\n                  }\n            }\n            className=\"pagination-previous\"\n            title=\"This is the first page\"\n            disabled={prevDisabled}\n          >\n            {previous}\n          </a>\n          <a\n            role=\"button\"\n            tabIndex={0}\n            onClick={\n              nextDisabled\n                ? undefined\n                : () => {\n                    return onChange(current + 1);\n                  }\n            }\n            className=\"pagination-next\"\n            disabled={nextDisabled}\n          >\n            {next}\n          </a>\n        </>\n      )}\n      {delta > 0 && (\n        <>\n          <ul className=\"pagination-list\">\n            {showFirstLast && current !== 1 && firstPage !== 1 && (\n              <>\n                <li key={1}>\n                  <a\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"pagination-link\"\n                    onClick={() => {\n                      return onChange(1);\n                    }}\n                    aria-label=\"Page 1\"\n                    aria-current=\"page\"\n                    disabled={disabled}\n                  >\n                    1\n                  </a>\n                </li>\n                <li>\n                  <span className=\"pagination-ellipsis\">&hellip;</span>\n                </li>\n              </>\n            )}\n            {Array(lastPage - firstPage + 1)\n              .fill(0)\n              .map((_, i) => {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <li key={i + firstPage}>\n                    <a\n                      role=\"button\"\n                      tabIndex={0}\n                      className={classnames('pagination-link', {\n                        'is-current': current === i + firstPage,\n                      })}\n                      onClick={\n                        current === firstPage + i\n                          ? undefined\n                          : () => {\n                              return onChange(firstPage + i);\n                            }\n                      }\n                      aria-label={`Page ${i + firstPage}`}\n                      aria-current=\"page\"\n                      disabled={disabled}\n                    >\n                      {i + firstPage}\n                    </a>\n                  </li>\n                );\n              })}\n            {showFirstLast && current !== lastPage && total !== lastPage && (\n              <>\n                <li key={total}>\n                  <span className=\"pagination-ellipsis\">&hellip;</span>\n                </li>\n                <li>\n                  <a\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"pagination-link\"\n                    onClick={() => {\n                      return onChange(total);\n                    }}\n                    aria-label={`Page ${total}`}\n                    aria-current=\"page\"\n                    disabled={disabled}\n                  >\n                    {total}\n                  </a>\n                </li>\n              </>\n            )}\n          </ul>\n        </>\n      )}\n    </Element>\n  );\n};\n\nPagination.propTypes = {\n  /**\n   * This function its called when the user click on ano button that trigger a page change\n   * the parameter of the function is the new page number\n   */\n  onChange: PropTypes.func.isRequired,\n  /** Current page */\n  current: PropTypes.number,\n  /** whether to disable the buttons */\n  disabled: PropTypes.bool,\n  /** Total pages in total */\n  total: PropTypes.number,\n  /** Amount og pages to display at the left and right of the current (if delta 2 and current page is 3, the paginator will display pages from 1 to 5) */\n  delta: PropTypes.number,\n  /** Text of the Next button */\n  next: PropTypes.node,\n  /** Text of the Previous button */\n  previous: PropTypes.node,\n  showPrevNext: PropTypes.bool,\n  showFirstLast: PropTypes.bool,\n  /**\n   * If true will hide the pagination if `total == 1`\n   */\n  autoHide: PropTypes.bool,\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  align: PropTypes.oneOf(['center', 'right']),\n  rounded: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nPagination.defaultProps = {\n  total: 1,\n  current: 1,\n  delta: 1,\n  next: 'Next',\n  previous: 'Previous',\n  renderAs: 'nav',\n  showPrevNext: true,\n  autoHide: true,\n};\n\nexport default Pagination;\n"],"file":"pagination.js"}