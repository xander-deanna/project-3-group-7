{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames2 = _interopRequireDefault(require(\"classnames\"));\n\nvar _fieldLabel = _interopRequireDefault(require(\"./field-label\"));\n\nvar _fieldBody = _interopRequireDefault(require(\"./field-body\"));\n\nvar _element = _interopRequireDefault(require(\"../../../element\"));\n\nvar _normalizer = require(\"../../../../services/normalizer\");\n\nvar _context = _interopRequireWildcard(require(\"./context\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Field = function Field(_ref) {\n  var _classnames;\n\n  var className = _ref.className,\n      align = _ref.align,\n      multiline = _ref.multiline,\n      horizontal = _ref.horizontal,\n      kind = _ref.kind,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"className\", \"align\", \"multiline\", \"horizontal\", \"kind\", \"size\"]);\n\n  var context = (0, _context[\"default\"])();\n  var k = null;\n\n  if (kind === 'addons') {\n    k = 'has-addons';\n  } else if (kind === 'group') {\n    k = 'is-grouped';\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_context.FieldContext.Provider, {\n    value: {\n      size: size || context.size\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_element[\"default\"], _extends({}, props, {\n    className: (0, _classnames2[\"default\"])('field', className, (_classnames = {}, _defineProperty(_classnames, \"\".concat(k), k), _defineProperty(_classnames, \"\".concat(k, \"-\").concat((0, _normalizer.normalizeAlign)(align)), k === 'is-grouped' && align), _defineProperty(_classnames, \"\".concat(k, \"-multiline\"), k === 'is-grouped' && multiline), _defineProperty(_classnames, 'is-horizontal', horizontal), _classnames))\n  })));\n};\n\nField.Label = _fieldLabel[\"default\"];\nField.Body = _fieldBody[\"default\"];\nField.defaultProps = {};\nvar _default = Field;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../../src/components/form/components/field/field.js"],"names":["Field","className","align","multiline","horizontal","kind","size","props","context","k","FieldLabel","FieldBody"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport FieldLabel from './field-label';\nimport FieldBody from './field-body';\n\nimport Element from '../../../element';\nimport { normalizeAlign } from '../../../../services/normalizer';\nimport useFieldContext, { FieldContext } from './context';\n\nconst Field = ({\n  className,\n  align,\n  multiline,\n  horizontal,\n  kind,\n  size,\n  ...props\n}) => {\n  const context = useFieldContext();\n  let k = null;\n\n  if (kind === 'addons') {\n    k = 'has-addons';\n  } else if (kind === 'group') {\n    k = 'is-grouped';\n  }\n\n  return (\n    <FieldContext.Provider value={{ size: size || context.size }}>\n      <Element\n        {...props}\n        className={classnames('field', className, {\n          [`${k}`]: k,\n          [`${k}-${normalizeAlign(align)}`]: k === 'is-grouped' && align,\n          [`${k}-multiline`]: k === 'is-grouped' && multiline,\n          'is-horizontal': horizontal,\n        })}\n      />\n    </FieldContext.Provider>\n  );\n};\n\nField.Label = FieldLabel;\n\nField.Body = FieldBody;\n\nField.propTypes = {\n  /**\n   * When this prop is set this value will be used as size for `Form.Label` `Form.Input`, `Form.Textarea`, `Form.Select`, `Button` and `Icon` inside the field\n   */\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  /**\n   * `addon`: Will group together the controls without gap between\n   * `group`: Will group together the controls with evenly seperation between\n   */\n  kind: PropTypes.oneOf(['addons', 'group']),\n  /**\n   * Working together with `kind=\"group\"` to align all controls\n   */\n  align: PropTypes.oneOf(['center', 'right']),\n  /**\n   * When `kind=\"group\"` will wrap to next line if the control do not fit on the current line\n   */\n  multiline: PropTypes.bool,\n  /**\n   * To create a 2 columns form, See `Form.Field.Label` and `Form.Field.Body` for more details\n   */\n  horizontal: PropTypes.bool,\n};\n\nField.defaultProps = {};\n\nexport default Field;\n"]},"metadata":{},"sourceType":"script"}