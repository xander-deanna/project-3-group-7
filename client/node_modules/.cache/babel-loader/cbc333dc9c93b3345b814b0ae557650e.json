{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames2 = _interopRequireDefault(require(\"classnames\"));\n\nvar _buttonGroup = _interopRequireDefault(require(\"./components/button-group\"));\n\nvar _element = _interopRequireDefault(require(\"../element\"));\n\nvar _normalizer = require(\"../../services/normalizer\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Button = function Button(_ref) {\n  var _classnames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      renderAs = _ref.renderAs,\n      color = _ref.color,\n      size = _ref.size,\n      outlined = _ref.outlined,\n      inverted = _ref.inverted,\n      submit = _ref.submit,\n      reset = _ref.reset,\n      fullwidth = _ref.fullwidth,\n      status = _ref.status,\n      loading = _ref.loading,\n      disabled = _ref.disabled,\n      remove = _ref.remove,\n      isSelected = _ref.isSelected,\n      isStatic = _ref.isStatic,\n      rounded = _ref.rounded,\n      onClick = _ref.onClick,\n      text = _ref.text,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"renderAs\", \"color\", \"size\", \"outlined\", \"inverted\", \"submit\", \"reset\", \"fullwidth\", \"status\", \"loading\", \"disabled\", \"remove\", \"isSelected\", \"isStatic\", \"rounded\", \"onClick\", \"text\"]);\n\n  var otherProps = {};\n\n  if (submit) {\n    otherProps = {\n      type: 'submit',\n      renderAs: 'button'\n    };\n  }\n\n  if (reset) {\n    otherProps = {\n      type: 'reset',\n      renderAs: 'button'\n    };\n  }\n\n  if (isStatic) {\n    otherProps = {\n      renderAs: 'span'\n    };\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_element[\"default\"], _extends({\n    tabIndex: disabled ? -1 : 0,\n    renderAs: renderAs\n  }, props, otherProps, {\n    disabled: disabled,\n    onClick: disabled ? undefined : onClick,\n    className: (0, _classnames2[\"default\"])(className, (_classnames = {}, _defineProperty(_classnames, \"is-\".concat(color), color), _defineProperty(_classnames, \"is-\".concat(size), size), _defineProperty(_classnames, 'is-selected', isSelected), _defineProperty(_classnames, 'is-static', isStatic), _defineProperty(_classnames, 'is-rounded', rounded), _defineProperty(_classnames, 'is-outlined', outlined), _defineProperty(_classnames, 'is-inverted', inverted), _defineProperty(_classnames, 'is-fullwidth', fullwidth), _defineProperty(_classnames, \"is-\".concat((0, _normalizer.normalizeStatus)(status)), status), _defineProperty(_classnames, 'is-loading', loading), _defineProperty(_classnames, 'is-text', text), _defineProperty(_classnames, \"delete\", remove), _defineProperty(_classnames, \"button\", !remove), _classnames))\n  }), children);\n};\n\nButton.Group = _buttonGroup[\"default\"];\nButton.defaultProps = {\n  renderAs: 'button'\n};\nvar _default = Button;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/button/button.js"],"names":["Button","children","className","renderAs","color","size","outlined","inverted","submit","reset","fullwidth","status","loading","disabled","remove","isSelected","isStatic","rounded","onClick","text","props","otherProps","type","ButtonGroup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonGroup from './components/button-group';\nimport Element from '../element';\nimport { normalizeStatus } from '../../services/normalizer';\n\nconst Button = ({\n  children,\n  className,\n  renderAs,\n  color,\n  size,\n  outlined,\n  inverted,\n  submit,\n  reset,\n  fullwidth,\n  status,\n  loading,\n  disabled,\n  remove,\n  isSelected,\n  isStatic,\n  rounded,\n  onClick,\n  text,\n  ...props\n}) => {\n  let otherProps = {};\n  if (submit) {\n    otherProps = {\n      type: 'submit',\n      renderAs: 'button',\n    };\n  }\n  if (reset) {\n    otherProps = {\n      type: 'reset',\n      renderAs: 'button',\n    };\n  }\n\n  if (isStatic) {\n    otherProps = {\n      renderAs: 'span',\n    };\n  }\n\n  return (\n    <Element\n      tabIndex={disabled ? -1 : 0}\n      renderAs={renderAs}\n      {...props}\n      {...otherProps}\n      disabled={disabled}\n      onClick={disabled ? undefined : onClick}\n      className={classnames(className, {\n        [`is-${color}`]: color,\n        [`is-${size}`]: size,\n        'is-selected': isSelected,\n        'is-static': isStatic,\n        'is-rounded': rounded,\n        'is-outlined': outlined,\n        'is-inverted': inverted,\n        'is-fullwidth': fullwidth,\n        [`is-${normalizeStatus(status)}`]: status,\n        'is-loading': loading,\n        'is-text': text,\n        delete: remove,\n        button: !remove,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nButton.Group = ButtonGroup;\n\nButton.propTypes = {\n  color: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n      'black-bis',\n      'black-ter',\n      'white-bis',\n      'white-ter',\n      'grey-darker',\n      'grey-dark',\n      'grey-light',\n      'grey-lighter',\n    ]),\n    PropTypes.string,\n  ]),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  /**\n   * Whether Button should have an outline.\n   */\n  outlined: PropTypes.bool,\n  /**\n   * Whether Button should have an inverted color scheme. Useful when button is used on colored background\n   */\n  inverted: PropTypes.bool,\n  submit: PropTypes.bool,\n  reset: PropTypes.bool,\n  status: PropTypes.oneOf(['focus', 'hover', 'active']),\n  loading: PropTypes.bool,\n  /**\n   * Whether Button should occupy the full width of parent\n   */\n  fullwidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  remove: PropTypes.bool,\n  /**\n   * Whether Button is selected. Useful in a Button.Group.\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * Whether Button is non-interactive/static.\n   */\n  isStatic: PropTypes.bool,\n  /**\n   * Whether Button should have fully-rounded corners\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Whether Button is a text button.\n   */\n  text: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nButton.defaultProps = {\n  renderAs: 'button',\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"script"}