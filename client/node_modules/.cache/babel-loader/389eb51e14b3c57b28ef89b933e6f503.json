{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _dropdown = _interopRequireDefault(require(\"./dropdown\"));\n\nvar _element = _interopRequireDefault(require(\"../../element\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar NavbarItem = function NavbarItem(_ref) {\n  var _dropdown$props;\n\n  var className = _ref.className,\n      active = _ref.active,\n      children = _ref.children,\n      hoverable = _ref.hoverable,\n      renderAs = _ref.renderAs,\n      arrowless = _ref.arrowless,\n      props = _objectWithoutProperties(_ref, [\"className\", \"active\", \"children\", \"hoverable\", \"renderAs\", \"arrowless\"]);\n\n  var as = renderAs;\n\n  var dropdown = _react[\"default\"].Children.toArray(children).find(function (child) {\n    return child.type === _dropdown[\"default\"];\n  });\n\n  if (dropdown && renderAs === 'a') {\n    as = 'span';\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_element[\"default\"], _extends({}, props, {\n    renderAs: as,\n    className: (0, _classnames[\"default\"])('navbar-item', className, {\n      'is-active': active,\n      'has-dropdown': dropdown,\n      'is-hoverable': hoverable,\n      'has-dropdown-up': dropdown && ((_dropdown$props = dropdown.props) === null || _dropdown$props === void 0 ? void 0 : _dropdown$props.up),\n      'is-arrowless': arrowless\n    })\n  }), children);\n};\n\nNavbarItem.defaultProps = {\n  renderAs: 'a'\n};\nvar _default = NavbarItem;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/navbar/components/item.js"],"names":["NavbarItem","className","active","children","hoverable","renderAs","arrowless","props","as","dropdown","child","NavbarDropdown"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAQb;AAAA,MAAA,eAAA;;AAAA,MAPJC,SAOI,GAAA,IAAA,CAPJA,SAOI;AAAA,MANJC,MAMI,GAAA,IAAA,CANJA,MAMI;AAAA,MALJC,QAKI,GAAA,IAAA,CALJA,QAKI;AAAA,MAJJC,SAII,GAAA,IAAA,CAJJA,SAII;AAAA,MAHJC,QAGI,GAAA,IAAA,CAHJA,QAGI;AAAA,MAFJC,SAEI,GAAA,IAAA,CAFJA,SAEI;AAAA,MADDC,KACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AACJ,MAAIC,EAAE,GAAN,QAAA;;AAEA,MAAMC,QAAQ,GAAG,MAAA,CAAA,SAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,CAAsC,UAAA,KAAA,EAAW;AAChE,WAAOC,KAAK,CAALA,IAAAA,KAAeC,SAAAA,CAAtB,SAAsBA,CAAtB;AADF,GAAiB,CAAjB;;AAIA,MAAIF,QAAQ,IAAIJ,QAAQ,KAAxB,GAAA,EAAkC;AAChCG,IAAAA,EAAE,GAAFA,MAAAA;AACD;;AACD,SAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,QAAA,CAAD,SAAC,CAAD,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,QAAQ,EAFV,EAAA;AAGE,IAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,SAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAqC;AAC9C,mBAD8C,MAAA;AAE9C,sBAF8C,QAAA;AAG9C,sBAH8C,SAAA;AAI9C,yBAAmBC,QAAQ,KAAA,CAAA,eAAA,GAAIA,QAAQ,CAAZ,KAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAIA,eAAAA,CAJe,EAInB,CAJmB;AAK9C,sBAAgBH;AAL8B,KAArC;AAHb,GAAA,CAAA,EADF,QACE,CADF;AAlBF,CAAA;;AAqDAN,UAAU,CAAVA,YAAAA,GAA0B;AACxBK,EAAAA,QAAQ,EAAE;AADc,CAA1BL;eAIeA,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport NavbarDropdown from './dropdown';\n\nimport Element from '../../element';\n\nconst NavbarItem = ({\n  className,\n  active,\n  children,\n  hoverable,\n  renderAs,\n  arrowless,\n  ...props\n}) => {\n  let as = renderAs;\n\n  const dropdown = React.Children.toArray(children).find((child) => {\n    return child.type === NavbarDropdown;\n  });\n\n  if (dropdown && renderAs === 'a') {\n    as = 'span';\n  }\n  return (\n    <Element\n      {...props}\n      renderAs={as}\n      className={classnames('navbar-item', className, {\n        'is-active': active,\n        'has-dropdown': dropdown,\n        'is-hoverable': hoverable,\n        'has-dropdown-up': dropdown && dropdown.props?.up,\n        'is-arrowless': arrowless,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nNavbarItem.propTypes = {\n  /**\n   * If the item has a dropdown, control if the dropdown is displayed\n   */\n  active: PropTypes.bool,\n  /**\n   * Control if the dropdown should be displayed on mouse over\n   * This prop will be ignored if `active=true`\n   */\n  hoverable: PropTypes.bool,\n  arrowless: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nNavbarItem.defaultProps = {\n  renderAs: 'a',\n};\n\nexport default NavbarItem;\n"]},"metadata":{},"sourceType":"script"}