{"version":3,"sources":["utils/API.js","utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/auth/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/Navigation/Navigation.js","utils/meseum-api.js","components/ExploreCard.js","pages/Explore/Explore.js","pages/About/About.js","components/GalleryCard.js","pages/Gallery/Gallery.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["xappToken","expiration","artistId","artistName","setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Landing","style","height","className","to","width","borderRadius","letterSpacing","Component","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","this","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","placeholder","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Navigation","onLogoutClick","Brand","Item","renderAs","Burger","Menu","Container","onClick","artData","get","delete","ExploreCard","artSave","art","title","artist","date","medium","dimensions","imgUrl","Meseum","console","log","src","url","expires_at","query","callback","_embedded","results","filter","item","_links","self","href","split","pop","artworks","length","setTimeout","maxArtwork","promises","i","arrayId","all","spread","imageArray","image","thumbnail","in","text","imgId","Field","Form","Control","Input","Explore","handleInputChange","event","search","handleFormSubmit","API","bind","addEventListener","color","map","index","key","About","artDelete","_id","updateState","Gallery","updateStateCallback","jwtToken","currentTime","Date","now","exp","location","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.269e089a.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// global variables for API call token\nconst clientID = '5b7eb2568e3b3f888f85';\nconst clientSecret = '7941b6cc8fec588390fdb67abdc32930';\nconst tokenUrl = 'https://api.artsy.net/api/tokens/xapp_token?';\nconst url = 'https://api.artsy.net/api/';\nlet xappToken;\nlet expiration;\n\n// need a way to check if token is expired, if expired, run getToken() again to get a new token\n\n// global variables for Artist\nlet artistId;\nlet artistName;\n\nexport default {\n    // gets API token, is called on page reload\n    getToken: function () {\n        return axios.post(`${tokenUrl}client_id=${clientID}&client_secret=${clientSecret}`)\n            .then(function (res) {\n                console.log('token data object: ', res)\n                xappToken = res.data.token;\n                expiration = res.data.expires_at;\n                console.log('token: ', xappToken)\n                console.log('expiration: ', expiration)\n            })\n    },\n\n    // Artsy API call to search based on artist name\n    getArtist: function (query, callback) {\n        return axios.get(`${url}search?q=(${query})`, {\n            // sets headers to present token\n            headers: {\n                'X-xapp-token': xappToken,\n            }\n        })\n\n        // returns only results of type \"artist\", grabs artist ID and name\n        .then(function (data) {\n            console.log('artist data object: ', data)\n\n            // artistId\n            artistId = data.data._embedded.results.filter(function (item) {\n                return item.type === 'artist';\n            })[0]._links.self.href.split('/').pop();\n            console.log('artistId: ', artistId)\n\n            // artistName\n            artistName = data.data._embedded.results.filter(function (item) {\n                return item.type === 'artist';\n            })[0].title;\n            console.log('artistName: ', artistName)\n\n            // runs another axios get request to search artworks using the artistId we just grabbed\n            return axios.get(`${url}artworks?artist_id=${artistId}`, {\n                // sets headers to present token\n                headers: {\n                    'X-xapp-token': xappToken,\n                }\n            })\n        })\n\n        // gets the results of above\n        .then(function (results) {\n        console.log('results of searching artworks by artist ID: ', results)\n            if (results.data._embedded.artworks.length == 0) {\n                console.log(\"No art found! (ME)seum is only able to search public works, please try another artist.\")\n                    // noArtFound()\n                ;\n            }\n            else { \n                // for loop that searchs the the API for artworks based on the artwork ID\n                // currently limited to 3 due to API rate limiting, working on work-arround\n                setTimeout(() => {\n                    let maxArtwork = 5;\n                    if (results.data._embedded.artworks.length <= 5) {\n                        maxArtwork = results.data._embedded.artworks.length\n                    }\n                    let promises = [];\n\n                    for (var i = 0; i < maxArtwork; i++) {\n                        var arrayId = results.data._embedded.artworks[i].id;\n                        promises.push(axios.get(`${url}/artworks/${arrayId}`, {\n                            // sets headers to present token\n                            headers: {\n                                'X-xapp-token': xappToken,\n                            }\n                        }));\n                    }\n                    axios.all(promises)\n                        // pushes final results into imageArray to use in the front end\n                        .then(axios.spread((...responses) => {\n                            let imageArray = []\n                            for (var i = 0; i <responses.length; i++) {\n                                let results = responses[i]\n                                var id = results.data.id;\n                                var image = results.data._links.thumbnail.href;\n                                var title = results.data.title;\n                                var date = results.data.date;\n                                var medium = results.data.medium;\n                                var dimensions = results.data.dimensions.in.text\n                        \n                                imageArray.push({\n                                    imgId: id,\n                                    imgUrl: image,\n                                    title: title,\n                                    date: date,\n                                    medium: medium,\n                                    artistName: artistName,\n                                    dimensions: dimensions\n                                });\n                            }\n                            callback(imageArray)\n                        }))\n                }, 1000)\n            }\n        })    \n    }\n};","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n    compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>HELLO</b>\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Welcome to (ME)seum! Where you can Explore and Create your own Art Gallery! 🖼\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to about page\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/about\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/about\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\"></label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12 \">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\"></label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from 'react-bulma-components';\n// import '../../App.css'\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navigation extends Component {\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Brand>\n          <Navbar.Item renderAs=\"div\">\n            <Link className=\"nav-link logo\" to={\"/about\"}><strong>(<strong className=\"logo-blue\">ME</strong>)<strong>seum</strong></strong></Link>\n\n          </Navbar.Item>\n          <Navbar.Burger />\n        </Navbar.Brand>\n        <Navbar.Menu>\n\n          {/* very hacky way of getting navbar items centered, please don't delete. */}\n          <Navbar.Container />\n          <Navbar.Container />\n          {/* -- end weird hackyness -- */}\n\n          <Navbar.Container>\n            <Navbar.Item renderAs=\"div\">\n              <Link className=\"nav-link\" to={\"/about\"}><strong>ABOUT</strong></Link>\n            </Navbar.Item>\n            <Navbar.Item renderAs=\"div\">\n              <Link className=\"nav-link\" to={\"/explore\"}><strong>EXPLORE</strong></Link>\n            </Navbar.Item>\n            <Navbar.Item renderAs=\"div\">\n              <Link className=\"nav-link\" to={\"/gallery\"}><strong>GALLERY</strong></Link>\n            </Navbar.Item>\n          </Navbar.Container>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <button\n                  onClick={this.onLogoutClick}\n                  className=\"button is-light\">\n                  <strong>LOGOUT</strong>\n                </button>\n              </div>\n            </div>\n          </div>\n        </Navbar.Menu>\n      </Navbar>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navigation);","import axios from \"axios\";\nexport default {\n    // save art to db\n    // will need to create button for this on explore card\n    saveArt: function(artData) {\n        return axios.post('/api/artists', artData);\n    },\n\n    // get saved art from db\n    // should be called automatically upon rendering of gallery page\n    getAllArt: function() {\n        return axios.get('/api/artists');\n    },\n\n    // delete art by ID\n    // will need to create button for this on gallery card\n    deleteArt: function(id) {\n        return axios.delete('/api/artists/' + id);\n    }\n}; ","import React, { Component } from \"react\";\n\nimport Meseum from \"../utils/meseum-api\";\n\n\nexport default class ExploreCard extends Component {\n    artSave = id => {\n        //select the current art by id and assign its value to variable art\n        const art = {\n            title: this.props.title,\n            artist: this.props.artistName,\n            date: this.props.date,\n            medium: this.props.medium,\n            dimensions: this.props.dimensions,\n            imgUrl: this.props.imgUrl\n        }\n        //API call to post id to backend \n        Meseum.saveArt(art). then((res) => {\n            console.log(res)\n            //write codes for what you want to happen after the art has been posted to datatbase\n        })\n    }\n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"columns is-mobile is-multiline is-centered\">\n                <div className=\"card\">\n                    <div className=\"card-content\">\n                        <div className=\"media-center\">\n                            <img className=\"artsy-img\"src={this.props.imgUrl}/>\n                        </div>\n                        <br/>\n                        <div className=\"content\">\n                            <strong>{this.props.artistName}</strong><br/>\n                            <em>{this.props.title}</em>\n                            <ul>\n                                <li>\n                                    {this.props.date}\n                                </li>\n                                <li>\n                                    {this.props.medium}\n                                </li>\n                                <li>\n                                    {this.props.dimensions}\n                                </li>\n                            </ul>\n                            <button onClick={this.artSave} className=\"button is-light is-primary is-pulled-right save-btn\">\n                                <i className=\"fas fa-star\"></i>\n                            </button>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Navigation from \"../../components/Navigation/Navigation.js\";\nimport ExploreCard from \"../../components/ExploreCard.js\";\nimport { Form } from 'react-bulma-components';\nconst { Field, Control, Input } = Form;\n\nimport API from \"../../utils/API\"\n\nexport default class Explore extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            artworks: [],\n            search: \"\"\n        };\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    }\n\n    // creates new token on page load\n    componentDidMount() {\n        window.addEventListener('load', API.getToken());\n     }\n\n    // takes in the input from the searchbar (???maybe???)\n    handleInputChange = event => {\n        const value = event.target.value;\n        this.setState({\n            search: value\n        });\n        console.log(event.target)\n        console.log(this.state)\n    };\n\n    // executes searchArt on submit\n    handleFormSubmit = event => {\n        event.preventDefault();\n        API.getArtist(this.state.search, (imageArray) => {this.setState({artworks: imageArray})});\n        console.log(this.state.search)\n    };\n\n    render() {\n        console.log(this.state.artworks)\n        return (\n            <div>\n                <Navigation/>\n                <form onSubmit={this.handleFormSubmit}>\n                    <Field>\n                        <Control className=\"has-icons-left\">\n                        <Input\n                            search={this.state.search}\n                            onChange={this.handleInputChange}\n                            placeholder=\"Search your favorite artists here.\"\n                            type=\"text\"\n                            color=\"dark\"\n                        />\n                        \n                        </Control>\n                    </Field>\n                </form>\n\n                {this.state.artworks.map((value, index) => {\n                    return <ExploreCard {...value} key={index}/>\n                })}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// navbar component\nimport Navigation from \"../../components/Navigation/Navigation\";\n\nconst About = () => (\n    <div>\n        <Navigation/>\n        <article className=\"message\">\n            <div className=\"message-header\">\n                <p>About the site</p>\n            </div>\n            <div className=\"message-body\">\n                <p>Hello, and welcome to <strong>(ME)seum</strong>!</p><br/>\n                \n                <p>We're so glad you decided to check out our site. (ME)seum is a digital art browser, where you can search and learn about a wide variety of works of art from all around the world. Just visit the <Link className=\"nav-link\" to={\"/explore\"}><strong>explore</strong></Link> page to begin your search.</p><br/>\n                \n                <p>On the explore page, just favorite a work of art to add it to your own personal <Link className=\"nav-link\" to={\"/gallery\"}><strong>gallery</strong></Link>! You can also rearrange the art on this page to your liking.</p>\n            </div>\n        </article>\n    </div>\n);\n\nexport default About","import React, { Component } from \"react\";\n\nimport Meseum from \"../utils/meseum-api\";\n\n\nexport default class ExploreCard extends Component {\n    artDelete = id => {\n        //select the current art by id and assign its value to variable art\n        \n        //API call to post id to backend \n        let _id = this.props._id\n        Meseum.deleteArt(this.props._id).then((res) => {\n            console.log(res)\n            this.props.updateState(_id)\n            //write codes for what you want to happen after the art has been posted to datatbase\n        })\n    }\n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"columns is-mobile is-multiline is-centered\">\n                <div className=\"card\">\n                    <div className=\"card-content\">\n                        <div className=\"media-center\">\n                            <img className=\"artsy-img\"src={this.props.imgUrl}/>\n                        </div>\n                        <br/>\n                        <div className=\"content\">\n                            <strong>{this.props.artistName}</strong><br/>\n                            <em>{this.props.title}</em>\n                            <ul>\n                                <li>\n                                    {this.props.date}\n                                </li>\n                                <li>\n                                    {this.props.medium}\n                                </li>\n                                <li>\n                                    {this.props.dimensions}\n                                </li>\n                            </ul>\n                            <button onClick={this.artDelete} className=\"button is-light is-primary is-pulled-right save-btn\">\n                                <i className=\"fas fa-star\"></i>\n                            </button>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport GalleryCard from \"../../components/GalleryCard.js\";\n\n// navbar component\nimport Navigation from \"../../components/Navigation/Navigation\";\n\nimport Meseum from \"../../utils/meseum-api\";\n\nexport default class Gallery extends Component {\n    constructor(props) {\n        super(props) \n        this.updateStateCallback = this.updateStateCallback.bind(this)\n    }\n    state = {artworks: []}\n    componentDidMount () {\n        Meseum.getAllArt().then(res => {\n            this.setState({artworks: res.data.data})\n        })\n    }\n    updateStateCallback (_id) {\n        this.setState({artworks:this.state.artworks.filter((art) => art._id !== _id)})\n    }\n    render() {\n        return (\n            <div>\n                <Navigation />\n                <h3>Gallery</h3>\n                {this.state.artworks.map((value, index) => {\n                    return <GalleryCard {...value} key={index} updateState={this.updateStateCallback}/>\n                })}\n            </div>\n        )\n    }\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n// components imports\nimport Landing from \"./components/auth/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\n\n// page imports\nimport Explore from \"./pages/Explore/Explore\"\nimport About from \"./pages/About/About\";\nimport Gallery from \"./pages/Gallery/Gallery\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n\n              {/* Auth Pages */}\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n\n              {/* Private Account Pages */}\n              <PrivateRoute exact path=\"/about\" component={About} />\n              <PrivateRoute exact path=\"/explore\" component={Explore} />\n              <PrivateRoute exact path=\"/gallery\" component={Gallery} />\n              \n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.unregister();\n\n"],"sourceRoot":""}